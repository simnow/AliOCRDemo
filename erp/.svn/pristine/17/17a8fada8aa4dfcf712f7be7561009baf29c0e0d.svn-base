package cn.caecc.erp.controller;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.caecc.erp.modules.dao.mybatis.entity.WellDaily;
import cn.caecc.erp.modules.dao.mybatis.entity.WellInfo;
import cn.caecc.erp.modules.dao.mybatis.entity.WellMud;
import cn.caecc.erp.modules.service.WellMudService;
import cn.caecc.erp.modules.service.WelldailyService;
import cn.caecc.erp.modules.service.WellinfoService;
import cn.caecc.erp.support.message.Message;
import cn.caecc.erp.support.util.DateUtil;
/**
 * 钻井日报-泥浆性能
 * @author GaiNing
 *
 */
@RequestMapping(value="api/wellmud")
@Controller
public class WellMudController extends BaseController{

	@Autowired
	public WellMudService wellMudService;
	@Autowired
	public WelldailyService wellDailyService;
	@Autowired
	public WellinfoService wellInfoService;
	
	/**
	 * 新增泥浆性能日志
	 * @param wellMud
	 * @return
	 */
	@RequestMapping(method=RequestMethod.POST)
	@ResponseBody
	public Message insertWellMud(@RequestBody WellMud wellMud){
		Message message=new Message();
		if(null==wellMud.getLogdate()||null==wellMud.getWellid()){
			message.setSuccess(false);
			message.setMsg("有为空项");
			return message;
		}
		//存储井队编号
		WellInfo wellInfo=wellInfoService.selectWellInfoById(wellMud.getWellid());
		if(wellInfo!=null){
			wellMud.setDid(wellInfo.getDid());
		}
		
		if(wellMudService.insertWellMud(wellMud)>0){
			//插入泥浆性能
			if(updateWellDaily(wellMud)){
				return message;
			}else{
				//删除刚刚存储的
				wellMudService.deleteByWellIdDate(wellMud.getWellid(),wellMud.getLogdate());
			}
		}
		message.setSuccess(false);
		message.setMsg("存储失败");
		return message;
	}
	/**
	 * 更新
	 */
	@RequestMapping(method=RequestMethod.PUT)
	@ResponseBody
	public Message updateWellMud(@RequestBody WellMud wellMud){
		Message message=new Message();
		//只能修改当天的
		/*if(!DateUtil.getcurrentDate().equals(wellMud.getLogdate())){
			message.setSuccess(false);
			message.setMsg("只可当日进行修改");
		}*/
		if(StringUtils.isBlank(wellMud.getId()+"")){
			message.setSuccess(false);
			message.setMsg("缺少数据");
		}
		if(wellMudService.updateWellMud(wellMud)){
			if(updateWellDaily(wellMud)){
				//更新日报汇总
				updateWellDaily(wellMud);
				return message;
			}
		}
		message.setSuccess(false);
		message.setMsg("操作失败");
		return message;
	}
	
	/**
	 * 删除
	 * @param id
	 * @return
	 */
	@RequestMapping(value="/{id}",method=RequestMethod.DELETE)
	@ResponseBody
	public Message deleteWellMudById(@PathVariable("id") int id){
		Message message=new Message();
		if(!wellMudService.deleteById(id)){
			message.setSuccess(false);
			message.setMsg("删除失败");
		}
		return message;
	}
	/**
	 * 单条泥浆性能查询
	 * @param id
	 * @return
	 */
	@RequestMapping(value="/{id}",method=RequestMethod.GET)
	@ResponseBody
	public Message selectById(@PathVariable("id") int id){
		Message message=new Message();
		message.setObj(wellMudService.selectById(id));
		return message;
	}
	
	@RequestMapping(value="/list",method=RequestMethod.GET)
	@ResponseBody
	public Message getWellMudList(String startDate,String endDate,int wellId,int pageNo,int pageSize){
		return wellMudService.getWellMudList(startDate, endDate, wellId, pageNo, pageSize);
	}
	
	private boolean updateWellDaily(WellMud wellMud) {
		WellDaily daily=new WellDaily();
		//泥浆性能
		daily.setLdnd(wellMud.getLdnd());//泥浆
		daily.setSs(wellMud.getSs());//泥浆性能-失水
		daily.setNjmd(wellMud.getNjmd()); //泥浆密度
		daily.setWellid(wellMud.getWellid());
		daily.setLogdate(wellMud.getLogdate());
		//进行更新
		if(wellDailyService.updateDailyWell(daily)){
			return true;
		}
		return false;
	}
}
