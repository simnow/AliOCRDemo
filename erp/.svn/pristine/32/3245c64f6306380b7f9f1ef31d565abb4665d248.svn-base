package cn.caecc.erp.modules.dao.mybatis.entity;

import java.util.ArrayList;
import java.util.List;

public class SupplierGoodsRelationshipExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    public SupplierGoodsRelationshipExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSupplieridIsNull() {
            addCriterion("SupplierID is null");
            return (Criteria) this;
        }

        public Criteria andSupplieridIsNotNull() {
            addCriterion("SupplierID is not null");
            return (Criteria) this;
        }

        public Criteria andSupplieridEqualTo(Integer value) {
            addCriterion("SupplierID =", value, "supplierid");
            return (Criteria) this;
        }

        public Criteria andSupplieridNotEqualTo(Integer value) {
            addCriterion("SupplierID <>", value, "supplierid");
            return (Criteria) this;
        }

        public Criteria andSupplieridGreaterThan(Integer value) {
            addCriterion("SupplierID >", value, "supplierid");
            return (Criteria) this;
        }

        public Criteria andSupplieridGreaterThanOrEqualTo(Integer value) {
            addCriterion("SupplierID >=", value, "supplierid");
            return (Criteria) this;
        }

        public Criteria andSupplieridLessThan(Integer value) {
            addCriterion("SupplierID <", value, "supplierid");
            return (Criteria) this;
        }

        public Criteria andSupplieridLessThanOrEqualTo(Integer value) {
            addCriterion("SupplierID <=", value, "supplierid");
            return (Criteria) this;
        }

        public Criteria andSupplieridIn(List<Integer> values) {
            addCriterion("SupplierID in", values, "supplierid");
            return (Criteria) this;
        }

        public Criteria andSupplieridNotIn(List<Integer> values) {
            addCriterion("SupplierID not in", values, "supplierid");
            return (Criteria) this;
        }

        public Criteria andSupplieridBetween(Integer value1, Integer value2) {
            addCriterion("SupplierID between", value1, value2, "supplierid");
            return (Criteria) this;
        }

        public Criteria andSupplieridNotBetween(Integer value1, Integer value2) {
            addCriterion("SupplierID not between", value1, value2, "supplierid");
            return (Criteria) this;
        }

        public Criteria andGoodcodeIsNull() {
            addCriterion("GoodCode is null");
            return (Criteria) this;
        }

        public Criteria andGoodcodeIsNotNull() {
            addCriterion("GoodCode is not null");
            return (Criteria) this;
        }

        public Criteria andGoodcodeEqualTo(String value) {
            addCriterion("GoodCode =", value, "goodcode");
            return (Criteria) this;
        }

        public Criteria andGoodcodeNotEqualTo(String value) {
            addCriterion("GoodCode <>", value, "goodcode");
            return (Criteria) this;
        }

        public Criteria andGoodcodeGreaterThan(String value) {
            addCriterion("GoodCode >", value, "goodcode");
            return (Criteria) this;
        }

        public Criteria andGoodcodeGreaterThanOrEqualTo(String value) {
            addCriterion("GoodCode >=", value, "goodcode");
            return (Criteria) this;
        }

        public Criteria andGoodcodeLessThan(String value) {
            addCriterion("GoodCode <", value, "goodcode");
            return (Criteria) this;
        }

        public Criteria andGoodcodeLessThanOrEqualTo(String value) {
            addCriterion("GoodCode <=", value, "goodcode");
            return (Criteria) this;
        }

        public Criteria andGoodcodeLike(String value) {
            addCriterion("GoodCode like", value, "goodcode");
            return (Criteria) this;
        }

        public Criteria andGoodcodeNotLike(String value) {
            addCriterion("GoodCode not like", value, "goodcode");
            return (Criteria) this;
        }

        public Criteria andGoodcodeIn(List<String> values) {
            addCriterion("GoodCode in", values, "goodcode");
            return (Criteria) this;
        }

        public Criteria andGoodcodeNotIn(List<String> values) {
            addCriterion("GoodCode not in", values, "goodcode");
            return (Criteria) this;
        }

        public Criteria andGoodcodeBetween(String value1, String value2) {
            addCriterion("GoodCode between", value1, value2, "goodcode");
            return (Criteria) this;
        }

        public Criteria andGoodcodeNotBetween(String value1, String value2) {
            addCriterion("GoodCode not between", value1, value2, "goodcode");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated do_not_delete_during_merge Wed Aug 15 13:52:14 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table supplier_goods_relationship
     *
     * @mbggenerated Wed Aug 15 13:52:14 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}