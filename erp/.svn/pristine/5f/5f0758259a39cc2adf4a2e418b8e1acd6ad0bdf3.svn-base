<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.caecc.erp.modules.dao.ex.mapper.UserExMapper">
	<resultMap type="cn.caecc.erp.modules.dao.ex.dto.UserDto" id="user_dto">
		<id column="Id" property="id" jdbcType="INTEGER" />
		<result column="LoginName" property="loginname" jdbcType="VARCHAR" />
		<result column="Password" property="password" jdbcType="VARCHAR" />
		<result column="Name" property="name" jdbcType="VARCHAR" />
		<result column="DId" property="did" jdbcType="INTEGER" />
		<result column="UnitTelephone" property="unittelephone"
			jdbcType="VARCHAR" />
		<result column="Telephone" property="telephone" jdbcType="VARCHAR" />
		<result column="Landline" property="landline" jdbcType="VARCHAR" />
		<result column="NetworkCard" property="networkcard" jdbcType="VARCHAR" />
		<result column="Fax" property="fax" jdbcType="VARCHAR" />
		<result column="Email" property="email" jdbcType="VARCHAR" />
		<result column="Sex" property="sex" jdbcType="INTEGER" />
		<result column="IdNo" property="idno" jdbcType="VARCHAR" />
		<result column="JobNo" property="jobno" jdbcType="VARCHAR" />
		<result column="PositionId" property="positionid" jdbcType="INTEGER" />
		<result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="CreateUserId" property="createuserid" jdbcType="INTEGER" />
		<result column="UpdateTime" property="updatetime" jdbcType="TIMESTAMP" />
		<result column="UpdateUserId" property="updateuserid" jdbcType="INTEGER" />
		<result column="EmployTime" property="employtime" jdbcType="TIMESTAMP" />
		<result column="QuitTime" property="quittime" jdbcType="TIMESTAMP" />
		<result column="POId" property="poid" jdbcType="INTEGER" />
		<result column="HeadPortraitPath" property="headportraitpath"
			jdbcType="VARCHAR" />
		<result column="dname" property="dname" jdbcType="VARCHAR" />
		<result column="dcode" property="dcode" jdbcType="VARCHAR" />
		<result column="pname" property="pname" jdbcType="VARCHAR" />
		<result column="poname" property="poname" jdbcType="VARCHAR" />
		<result column="cname" property="cname" jdbcType="VARCHAR" />
		<result column="uname" property="uname" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 02 16:05:24 CST 2018.
    -->
    Id, LoginName, Password, Name, DId, UnitTelephone, Telephone, Landline, NetworkCard, 
    Fax, Email, Sex, IdNo, JobNo, PositionId, CreateTime, CreateUserId, UpdateTime, UpdateUserId, 
    EmployTime, QuitTime, POId, HeadPortraitPath
  </sql>
	
	<!-- 查询用户分页列表 -->
	<select id="findByNameLike" parameterType="String" resultMap="user_dto">
		select us.*,d.name dname, d.code dcode, p.name pname,po.name poname,c.name cname,u.name
		uname from
		user us
		left join department d
		on(us.did=d.id)
		left join position p
		on(us.positionid=p.id)
		left join political_outlook po
		on(us.poid=po.id)
		left join user c
		on(us.createuserid=c.id)
		left join user u
		on(us.updateuserid=u.id)
		<where>
			<if test="_parameter!=null">
			 us.`Name` LIKE "%"#{_parameter}"%"
			</if>
		</where>	
	</select>
	
	<!-- 查询用户分页列表 -->
	<select id="findUserList" parameterType="cn.caecc.erp.modules.dao.ex.dto.UserDto" resultMap="user_dto">
		select us.*,d.name dname, d.code dcode, p.name pname,po.name poname,c.name cname,u.name
		uname from
		user us
		left join department d
		on(us.did=d.id)
		left join position p
		on(us.positionid=p.id)
		left join political_outlook po
		on(us.poid=po.id)
		left join user c
		on(us.createuserid=c.id)
		left join user u
		on(us.updateuserid=u.id)
		<where>
			<if test="did!=null and did!=''">
				d.id=#{did}
			</if>
			<if test="id!=null and id!=''">
			    us.id=#{id}
			</if>
		</where>
	</select>

	<update id="cleanDept" parameterType="int" >
		UPDATE `user` SET did=null where DId=#{id}
	</update>
	<!-- 查询部门下所有员工,副职,经理 -->
	<select id="getDeptAusers" parameterType="hashmap" resultType="cn.caecc.erp.modules.dao.mybatis.entity.User">
		SELECT U.* FROM user U JOIN user_role_relationship UR

		ON(U.ID=UR.ID) JOIN role R ON(UR.RID=R.ID) 

		<where>
			<if test="did==0">
				and U.Did is null
			</if>
			<if test="did!=0">
				and U.Did=#{did}
			</if>
			<if	test="name!=null">
				and R.Name=#{name}
			</if>
			<if test="useroles!=null">
				and	U.Id not in  (select ust.id from user ust join user_role_relationship urt on(ust.id=urt.id)
				join role rt on (urt.RId=rt.Id)  where 
				rt.Name in    
				<foreach collection="useroles" item="userrole" separator=","
                open="(" close="))">
                #{userrole}
            	</foreach>
            	<if test="did!=0">
				AND  U.Did=#{did}
				</if>
			</if>
		</where>
	</select>
	<!--通过用户查询部门副职,经理 -->
	<select id="getLeaderByUser" parameterType="hashmap" resultType="cn.caecc.erp.modules.dao.mybatis.entity.User">
			SELECT  US.* FROM 
			department DT  JOIN  `user`  US ON(DT.Id=US.DId)

			JOIN user_role_relationship  UR ON (US.Id=UR.Id)

			JOIN role RE ON(UR.RId=RE.Id) 
			<where>	
				DT.Id=(SELECT URT.DId FROM `user` URT WHERE URT.Id=#{userid})
				AND RE.`Name` in
				<foreach collection="useroles" item="userrole" separator=","
                open="(" close=")">
                #{userrole}
            	</foreach>
			</where>
	</select>
	<!-- 通过用户主键查询用户详情 -->
	<select id="findById" parameterType="int" resultMap="user_dto">
			select us.*,d.name dname, d.code dcode, p.name pname,po.name poname,c.name cname,u.name
			uname from
			user us
			left join department d
			on(us.did=d.id)
			left join position p
			on(us.positionid=p.id)
			left join political_outlook po
			on(us.poid=po.id)
			left join user c
			on(us.createuserid=c.id)
			left join user u
			on(us.updateuserid=u.id)
			where us.Id=#{id}	
	</select>
	<!-- 通过用户查询主管部门所有人 -->
	<select id="findManagerLeader" parameterType="hashmap" statementType="CALLABLE" resultType="cn.caecc.erp.modules.dao.mybatis.entity.User">
			 {
        	   call getManagerDeptUser(
               #{userid,mode=IN,jdbcType=INTEGER},
               #{typename,mode=IN,jdbcType=VARCHAR}
         		)
     		 }
	</select>
	<!-- 批量导入用户 -->
	<insert id="insertUsers">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into
		user(LoginName, Password, Name, DId, UnitTelephone, Telephone, Landline, NetworkCard, 
    Fax, Email, Sex, IdNo, JobNo, PositionId, CreateTime, CreateUserId, UpdateTime, UpdateUserId, 
    EmployTime, QuitTime, POId)
		values
		<foreach collection="users" item="user" separator=",">
			(#{user.loginname},
			#{user.password},
			#{user.name},
			#{user.did},
			#{user.unittelephone},
			#{user.telephone},
			#{user.landline},
			#{user.networkcard},
			#{user.fax},
			#{user.email},
			#{user.sex},
			#{user.idno},
			#{user.jobno},
			#{user.positionid},
			#{user.createtime},
			#{user.createuserid},
			#{user.updatetime},
			#{user.updateuserid},
			#{user.employtime},
			#{user.quittime},
			#{user.poid})
		</foreach>
	</insert>	
</mapper>