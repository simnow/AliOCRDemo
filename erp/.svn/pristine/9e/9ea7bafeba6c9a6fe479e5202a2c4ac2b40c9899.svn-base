package cn.caecc.erp.controller;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.caecc.erp.modules.dao.mybatis.entity.WellInfo;
import cn.caecc.erp.modules.dao.mybatis.entity.WellTime;
import cn.caecc.erp.modules.service.WellTimeService;
import cn.caecc.erp.modules.service.WellinfoService;
import cn.caecc.erp.support.message.Message;
import cn.caecc.erp.support.util.DateUtil;

/**
 * 钻井时效
 * @author GaiNing
 *
 */
@RequestMapping(value="api/welltime")
@Controller
public class WellTimeController extends BaseController{

	@Autowired
	public WellTimeService WellTimeService;
	@Autowired
	public WellinfoService wellInfoService;
	/**
	 * 新增
	 * @param WellTime
	 * @return
	 */
	@RequestMapping(method=RequestMethod.POST)
	@ResponseBody
	public Message insertWellTime(@RequestBody WellTime WellTime){
		if(null==WellTime.getWellid()){
			return new Message(false,"井号为空");
		}
		//存储井队编号
		WellInfo wellInfo=wellInfoService.selectWellInfoById(WellTime.getWellid());
		if(wellInfo!=null){
			WellTime.setDid(wellInfo.getDid());
		}
		if(WellTimeService.insertWellTime(WellTime)){
			return new Message();
		}else{
			Message message=new Message();
			message.setSuccess(false);
			message.setMsg("存储失败");
			return message;
		}
	}
	/**
	 * 删除
	 * @param id
	 * @return
	 */
	@RequestMapping(value="/{id}",method=RequestMethod.DELETE)
	@ResponseBody
	public Message deleteWellTime(@PathVariable("id") int id){
		if(WellTimeService.deleteWellTime(id)){
			return new Message();
		}else{
			Message message=new Message();
			message.setSuccess(false);
			message.setMsg("删除失败");
			return message;
		}
	}
	/**
	 * 查看
	 * @param id
	 * @return
	 */
	@RequestMapping(value="/{id}",method=RequestMethod.GET)
	@ResponseBody
	public Message selectWellTimeById(@PathVariable("id") int id){
		Message message=new Message();
		message.setObj(WellTimeService.getWellTimeById(id));
		return message;
	}
	/**
	 * 查询列表
	 * @param startDate
	 * @param endDate
	 * @param wellId
	 * @param pageNo
	 * @param pageSize
	 * @return
	 */
	@RequestMapping(value="/list",method=RequestMethod.GET)
	@ResponseBody
	public Message getWellTimeList(String startDate,String endDate,int wellId,int pageNo,int pageSize){
		return WellTimeService.listWellTime(startDate, endDate, wellId, pageNo, pageSize);
	}
	
	/**
	 * 修改
	 * @param WellTime
	 * @return
	 */
	@RequestMapping(method=RequestMethod.PUT)
	@ResponseBody
	public Message updateWellTime(@RequestBody WellTime WellTime){
		Message message=new Message();
		//只能修改当天的
		/*if(!DateUtil.getcurrentDate().equals(WellTime.getLogdate())){
			message.setSuccess(false);
			message.setMsg("只可当日进行修改");
		}*/
		if(StringUtils.isBlank(WellTime.getId()+"")){
			message.setSuccess(false);
			message.setMsg("缺少数据");
		}
		if(WellTimeService.updateWellTime(WellTime)){
			return new Message();
		}
		message.setSuccess(false);
		message.setMsg("操作失败");
		return message;
	}
}
