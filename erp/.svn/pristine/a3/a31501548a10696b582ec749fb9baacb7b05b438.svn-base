package cn.caecc.erp.controller;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import cn.caecc.erp.modules.dao.mybatis.entity.WorkingSummary;
import cn.caecc.erp.modules.service.WorkingSummaryService;
import cn.caecc.erp.support.constant.Contants;
import cn.caecc.erp.support.message.Message;

@Controller
@RequestMapping(value = "/api/workingsummary")
public class WorkingSummaryController extends BaseController {

	@Autowired
	private WorkingSummaryService wkService;

	/**
	 * FunName:addWorkingSummary : 添加工作计划
	 * 
	 * @param：WorkingSummary
	 * @return Message
	 * @Author:shh
	 * @Create Date: 2018-07-30
	 */
	@RequestMapping(method = RequestMethod.POST)
	@ResponseBody
	@RequiresPermissions(Contants.WORK_SUMMARY_ADD_PERMISSION)
	public Message addWorkingSummary(@RequestBody WorkingSummary workingSummary) {

		Message message = new Message();
		message.setSuccess(false);
		try {
			wkService.addWorkingSummary(workingSummary);
			message.setObj(workingSummary);
			message.setSuccess(true);

		} catch (Exception ex) {
			message.setMsg(ex.getMessage());
		}
		return message;
	}

	/**
	 * FunName:updateWorkingSummary : 修改工作计划
	 * 
	 * @param：WorkingSummary
	 * @return Message
	 * @Author:shh
	 * @Create Date: 2018-07-30
	 */
	@RequestMapping(method = RequestMethod.PUT)
	@ResponseBody
	@RequiresPermissions(Contants.WORK_SUMMARY_UPDATE_PERMISSION)
	public Message updateWorkingSummary(@RequestBody WorkingSummary workingSummary) {

		Message message = new Message();
		message.setSuccess(false);
		try {
			wkService.updateWorkingSummary(workingSummary);
			message.setObj(workingSummary);
			message.setSuccess(true);

		} catch (Exception ex) {
			message.setMsg(ex.getMessage());
		}
		return message;
	}

	/**
	 * FunName:deleteWorkingSummary Description :删除
	 * 
	 * @param：id
	 * @return Message
	 * @Author:shh
	 * @Create Date: 2018-07-30
	 */
	@RequestMapping(method = RequestMethod.DELETE)
	@ResponseBody
	@RequiresPermissions(Contants.WORK_SUMMARY_DELETE_PERMISSION)
	public Message deleteWorkingSummary(int id) {
		Message message = new Message();
		message.setSuccess(false);
		try {
			wkService.deleteWorkingSummary(id);
			message.setSuccess(true);

		} catch (Exception ex) {
			message.setMsg(ex.getMessage());
		}
		return message;
	}

	/**
	 * FunName:getDtoById Description :查询
	 * 
	 * @param：id
	 * @return Message
	 * @Author:shh
	 * @Create Date: 2018-07-30
	 */
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	@ResponseBody
	public Message getDtoById(@PathVariable("id") int id) {
		Message message = new Message();
		message.setSuccess(false);
		try {
			message.setObj(wkService.getWorkingSummaryById(id));
			message.setSuccess(true);

		} catch (Exception ex) {
			message.setMsg(ex.getMessage());
		}
		return message;
	}
	/**
	 * FunName:getTodaySummary :查询当天
	 * 
	 * @param：id
	 * @return Message
	 * @Author:shh
	 * @Create Date: 2018-07-31
	 */
	@RequestMapping(value = "/today", method = RequestMethod.GET)
	@ResponseBody
	public Message getTodaySummary(@RequestParam(value="pagesize",required=true) int pagesize,@RequestParam(value="pageno",required=true) int pageno) {
		Message message = new Message();
		message.setObj(wkService.getTodayWorkingSummary(pagesize, pageno));
		return message;
	}
	
	/**
	 * FunName:getMoreSummary():查询当天
	 * 
	 * @param：id
	 * @return Message
	 * @Author:shh
	 * @Create Date: 2018-07-31
	 */
	@RequestMapping(value = "/more", method = RequestMethod.GET)
	@ResponseBody
	public Message getMoreSummary(@RequestParam(value="pagesize",required=true) int pagesize,@RequestParam(value="pageno",required=true) int pageno) {
		Message message = new Message();
		message.setObj(wkService.getFourWorkingSummary(pagesize, pageno));
		return message;
	}
}
