package cn.caecc.erp.modules.dao.mybatis.entity;

import java.util.ArrayList;
import java.util.List;

public class MaterialGoodsRelationshipActivitiApplyExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    public MaterialGoodsRelationshipActivitiApplyExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("Id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("Id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("Id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("Id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("Id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("Id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("Id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("Id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("Id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("Id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("Id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("Id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andMidIsNull() {
            addCriterion("MId is null");
            return (Criteria) this;
        }

        public Criteria andMidIsNotNull() {
            addCriterion("MId is not null");
            return (Criteria) this;
        }

        public Criteria andMidEqualTo(Integer value) {
            addCriterion("MId =", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidNotEqualTo(Integer value) {
            addCriterion("MId <>", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidGreaterThan(Integer value) {
            addCriterion("MId >", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidGreaterThanOrEqualTo(Integer value) {
            addCriterion("MId >=", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidLessThan(Integer value) {
            addCriterion("MId <", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidLessThanOrEqualTo(Integer value) {
            addCriterion("MId <=", value, "mid");
            return (Criteria) this;
        }

        public Criteria andMidIn(List<Integer> values) {
            addCriterion("MId in", values, "mid");
            return (Criteria) this;
        }

        public Criteria andMidNotIn(List<Integer> values) {
            addCriterion("MId not in", values, "mid");
            return (Criteria) this;
        }

        public Criteria andMidBetween(Integer value1, Integer value2) {
            addCriterion("MId between", value1, value2, "mid");
            return (Criteria) this;
        }

        public Criteria andMidNotBetween(Integer value1, Integer value2) {
            addCriterion("MId not between", value1, value2, "mid");
            return (Criteria) this;
        }

        public Criteria andGcodeIsNull() {
            addCriterion("GCode is null");
            return (Criteria) this;
        }

        public Criteria andGcodeIsNotNull() {
            addCriterion("GCode is not null");
            return (Criteria) this;
        }

        public Criteria andGcodeEqualTo(String value) {
            addCriterion("GCode =", value, "gcode");
            return (Criteria) this;
        }

        public Criteria andGcodeNotEqualTo(String value) {
            addCriterion("GCode <>", value, "gcode");
            return (Criteria) this;
        }

        public Criteria andGcodeGreaterThan(String value) {
            addCriterion("GCode >", value, "gcode");
            return (Criteria) this;
        }

        public Criteria andGcodeGreaterThanOrEqualTo(String value) {
            addCriterion("GCode >=", value, "gcode");
            return (Criteria) this;
        }

        public Criteria andGcodeLessThan(String value) {
            addCriterion("GCode <", value, "gcode");
            return (Criteria) this;
        }

        public Criteria andGcodeLessThanOrEqualTo(String value) {
            addCriterion("GCode <=", value, "gcode");
            return (Criteria) this;
        }

        public Criteria andGcodeLike(String value) {
            addCriterion("GCode like", value, "gcode");
            return (Criteria) this;
        }

        public Criteria andGcodeNotLike(String value) {
            addCriterion("GCode not like", value, "gcode");
            return (Criteria) this;
        }

        public Criteria andGcodeIn(List<String> values) {
            addCriterion("GCode in", values, "gcode");
            return (Criteria) this;
        }

        public Criteria andGcodeNotIn(List<String> values) {
            addCriterion("GCode not in", values, "gcode");
            return (Criteria) this;
        }

        public Criteria andGcodeBetween(String value1, String value2) {
            addCriterion("GCode between", value1, value2, "gcode");
            return (Criteria) this;
        }

        public Criteria andGcodeNotBetween(String value1, String value2) {
            addCriterion("GCode not between", value1, value2, "gcode");
            return (Criteria) this;
        }

        public Criteria andApplycountIsNull() {
            addCriterion("ApplyCount is null");
            return (Criteria) this;
        }

        public Criteria andApplycountIsNotNull() {
            addCriterion("ApplyCount is not null");
            return (Criteria) this;
        }

        public Criteria andApplycountEqualTo(Integer value) {
            addCriterion("ApplyCount =", value, "applycount");
            return (Criteria) this;
        }

        public Criteria andApplycountNotEqualTo(Integer value) {
            addCriterion("ApplyCount <>", value, "applycount");
            return (Criteria) this;
        }

        public Criteria andApplycountGreaterThan(Integer value) {
            addCriterion("ApplyCount >", value, "applycount");
            return (Criteria) this;
        }

        public Criteria andApplycountGreaterThanOrEqualTo(Integer value) {
            addCriterion("ApplyCount >=", value, "applycount");
            return (Criteria) this;
        }

        public Criteria andApplycountLessThan(Integer value) {
            addCriterion("ApplyCount <", value, "applycount");
            return (Criteria) this;
        }

        public Criteria andApplycountLessThanOrEqualTo(Integer value) {
            addCriterion("ApplyCount <=", value, "applycount");
            return (Criteria) this;
        }

        public Criteria andApplycountIn(List<Integer> values) {
            addCriterion("ApplyCount in", values, "applycount");
            return (Criteria) this;
        }

        public Criteria andApplycountNotIn(List<Integer> values) {
            addCriterion("ApplyCount not in", values, "applycount");
            return (Criteria) this;
        }

        public Criteria andApplycountBetween(Integer value1, Integer value2) {
            addCriterion("ApplyCount between", value1, value2, "applycount");
            return (Criteria) this;
        }

        public Criteria andApplycountNotBetween(Integer value1, Integer value2) {
            addCriterion("ApplyCount not between", value1, value2, "applycount");
            return (Criteria) this;
        }

        public Criteria andCgidIsNull() {
            addCriterion("CGId is null");
            return (Criteria) this;
        }

        public Criteria andCgidIsNotNull() {
            addCriterion("CGId is not null");
            return (Criteria) this;
        }

        public Criteria andCgidEqualTo(Integer value) {
            addCriterion("CGId =", value, "cgid");
            return (Criteria) this;
        }

        public Criteria andCgidNotEqualTo(Integer value) {
            addCriterion("CGId <>", value, "cgid");
            return (Criteria) this;
        }

        public Criteria andCgidGreaterThan(Integer value) {
            addCriterion("CGId >", value, "cgid");
            return (Criteria) this;
        }

        public Criteria andCgidGreaterThanOrEqualTo(Integer value) {
            addCriterion("CGId >=", value, "cgid");
            return (Criteria) this;
        }

        public Criteria andCgidLessThan(Integer value) {
            addCriterion("CGId <", value, "cgid");
            return (Criteria) this;
        }

        public Criteria andCgidLessThanOrEqualTo(Integer value) {
            addCriterion("CGId <=", value, "cgid");
            return (Criteria) this;
        }

        public Criteria andCgidIn(List<Integer> values) {
            addCriterion("CGId in", values, "cgid");
            return (Criteria) this;
        }

        public Criteria andCgidNotIn(List<Integer> values) {
            addCriterion("CGId not in", values, "cgid");
            return (Criteria) this;
        }

        public Criteria andCgidBetween(Integer value1, Integer value2) {
            addCriterion("CGId between", value1, value2, "cgid");
            return (Criteria) this;
        }

        public Criteria andCgidNotBetween(Integer value1, Integer value2) {
            addCriterion("CGId not between", value1, value2, "cgid");
            return (Criteria) this;
        }

        public Criteria andRemarksIsNull() {
            addCriterion("Remarks is null");
            return (Criteria) this;
        }

        public Criteria andRemarksIsNotNull() {
            addCriterion("Remarks is not null");
            return (Criteria) this;
        }

        public Criteria andRemarksEqualTo(String value) {
            addCriterion("Remarks =", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotEqualTo(String value) {
            addCriterion("Remarks <>", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksGreaterThan(String value) {
            addCriterion("Remarks >", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksGreaterThanOrEqualTo(String value) {
            addCriterion("Remarks >=", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLessThan(String value) {
            addCriterion("Remarks <", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLessThanOrEqualTo(String value) {
            addCriterion("Remarks <=", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLike(String value) {
            addCriterion("Remarks like", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotLike(String value) {
            addCriterion("Remarks not like", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksIn(List<String> values) {
            addCriterion("Remarks in", values, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotIn(List<String> values) {
            addCriterion("Remarks not in", values, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksBetween(String value1, String value2) {
            addCriterion("Remarks between", value1, value2, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotBetween(String value1, String value2) {
            addCriterion("Remarks not between", value1, value2, "remarks");
            return (Criteria) this;
        }

        public Criteria andReasonIsNull() {
            addCriterion("Reason is null");
            return (Criteria) this;
        }

        public Criteria andReasonIsNotNull() {
            addCriterion("Reason is not null");
            return (Criteria) this;
        }

        public Criteria andReasonEqualTo(String value) {
            addCriterion("Reason =", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonNotEqualTo(String value) {
            addCriterion("Reason <>", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonGreaterThan(String value) {
            addCriterion("Reason >", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonGreaterThanOrEqualTo(String value) {
            addCriterion("Reason >=", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonLessThan(String value) {
            addCriterion("Reason <", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonLessThanOrEqualTo(String value) {
            addCriterion("Reason <=", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonLike(String value) {
            addCriterion("Reason like", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonNotLike(String value) {
            addCriterion("Reason not like", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonIn(List<String> values) {
            addCriterion("Reason in", values, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonNotIn(List<String> values) {
            addCriterion("Reason not in", values, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonBetween(String value1, String value2) {
            addCriterion("Reason between", value1, value2, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonNotBetween(String value1, String value2) {
            addCriterion("Reason not between", value1, value2, "reason");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated do_not_delete_during_merge Wed Aug 01 18:31:25 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table material_goods_relationship_activiti_apply
     *
     * @mbggenerated Wed Aug 01 18:31:25 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}